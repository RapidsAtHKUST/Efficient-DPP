//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-21458526
// Driver 375.26
// Based on LLVM 3.4svn
//

.version 5.0
.target sm_35, texmode_independent
.address_size 64

	// .globl	thread_histogram
// block_reorder_scatter_k$tempSums has been demoted
// block_reorder_scatter_kv$tempSums has been demoted

.entry thread_histogram(
	.param .u64 .ptr .global .align 4 thread_histogram_param_0,
	.param .u32 thread_histogram_param_1,
	.param .u64 .ptr .global .align 4 thread_histogram_param_2,
	.param .u32 thread_histogram_param_3,
	.param .u64 .ptr .shared .align 4 thread_histogram_param_4
)
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<32>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd1, [thread_histogram_param_0];
	ld.param.u32 	%r13, [thread_histogram_param_1];
	ld.param.u64 	%rd2, [thread_histogram_param_2];
	ld.param.u32 	%r14, [thread_histogram_param_3];
	ld.param.u64 	%rd3, [thread_histogram_param_4];
	mov.b32	%r15, %envreg3;
	mov.u32 	%r16, %ctaid.x;
	mov.u32 	%r1, %ntid.x;
	mad.lo.s32 	%r17, %r16, %r1, %r15;
	mov.u32 	%r2, %tid.x;
	add.s32 	%r3, %r17, %r2;
	mov.b32	%r18, %envreg6;
	mul.lo.s32 	%r4, %r1, %r18;
	mul.lo.s32 	%r5, %r1, %r14;
	setp.ge.s32	%p1, %r2, %r5;
	@%p1 bra 	BB0_3;

	mov.u32 	%r29, %r2;

BB0_2:
	mov.u32 	%r6, %r29;
	mul.wide.s32 	%rd4, %r6, 4;
	add.s64 	%rd5, %rd3, %rd4;
	mov.u32 	%r19, 0;
	st.shared.u32 	[%rd5], %r19;
	add.s32 	%r7, %r6, %r1;
	setp.lt.s32	%p2, %r7, %r5;
	mov.u32 	%r29, %r7;
	@%p2 bra 	BB0_2;

BB0_3:
	add.s32 	%r8, %r14, -1;
	bar.sync 	0;
	setp.ge.s32	%p3, %r3, %r13;
	@%p3 bra 	BB0_6;

	mov.u32 	%r30, %r3;

BB0_5:
	mov.u32 	%r9, %r30;
	mul.wide.s32 	%rd6, %r9, 4;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.u32 	%r20, [%rd7];
	and.b32  	%r21, %r20, %r8;
	mad.lo.s32 	%r22, %r21, %r1, %r2;
	mul.wide.s32 	%rd8, %r22, 4;
	add.s64 	%rd9, %rd3, %rd8;
	ld.shared.u32 	%r23, [%rd9];
	add.s32 	%r24, %r23, 1;
	st.shared.u32 	[%rd9], %r24;
	add.s32 	%r10, %r9, %r4;
	setp.lt.s32	%p4, %r10, %r13;
	mov.u32 	%r30, %r10;
	@%p4 bra 	BB0_5;

BB0_6:
	bar.sync 	0;
	mov.u32 	%r31, 0;
	setp.lt.s32	%p5, %r14, 1;
	@%p5 bra 	BB0_8;

BB0_7:
	mad.lo.s32 	%r26, %r31, %r1, %r2;
	mul.wide.s32 	%rd10, %r26, 4;
	add.s64 	%rd11, %rd3, %rd10;
	ld.shared.u32 	%r27, [%rd11];
	mad.lo.s32 	%r28, %r31, %r4, %r3;
	mul.wide.s32 	%rd12, %r28, 4;
	add.s64 	%rd13, %rd2, %rd12;
	st.global.u32 	[%rd13], %r27;
	add.s32 	%r31, %r31, 1;
	setp.lt.s32	%p6, %r31, %r14;
	@%p6 bra 	BB0_7;

BB0_8:
	ret;
}

	// .globl	thread_scatter_k
.entry thread_scatter_k(
	.param .u64 .ptr .global .align 4 thread_scatter_k_param_0,
	.param .u64 .ptr .global .align 4 thread_scatter_k_param_1,
	.param .u32 thread_scatter_k_param_2,
	.param .u64 .ptr .global .align 4 thread_scatter_k_param_3,
	.param .u32 thread_scatter_k_param_4,
	.param .u64 .ptr .shared .align 4 thread_scatter_k_param_5
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<27>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd1, [thread_scatter_k_param_0];
	ld.param.u64 	%rd2, [thread_scatter_k_param_1];
	ld.param.u32 	%r10, [thread_scatter_k_param_2];
	ld.param.u64 	%rd3, [thread_scatter_k_param_3];
	ld.param.u32 	%r11, [thread_scatter_k_param_4];
	ld.param.u64 	%rd4, [thread_scatter_k_param_5];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mov.b32	%r14, %envreg3;
	add.s32 	%r15, %r14, %r1;
	mad.lo.s32 	%r26, %r13, %r2, %r15;
	mov.b32	%r16, %envreg6;
	mul.lo.s32 	%r4, %r2, %r16;
	mov.u32 	%r25, 0;
	setp.lt.s32	%p1, %r11, 1;
	@%p1 bra 	BB1_2;

BB1_1:
	mad.lo.s32 	%r17, %r25, %r4, %r26;
	mul.wide.s32 	%rd5, %r17, 4;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u32 	%r18, [%rd6];
	mad.lo.s32 	%r19, %r25, %r2, %r1;
	mul.wide.s32 	%rd7, %r19, 4;
	add.s64 	%rd8, %rd4, %rd7;
	st.shared.u32 	[%rd8], %r18;
	add.s32 	%r25, %r25, 1;
	setp.lt.s32	%p2, %r25, %r11;
	@%p2 bra 	BB1_1;

BB1_2:
	add.s32 	%r7, %r11, -1;
	bar.sync 	0;
	setp.ge.s32	%p3, %r26, %r10;
	@%p3 bra 	BB1_4;

BB1_3:
	mul.wide.s32 	%rd9, %r26, 4;
	add.s64 	%rd10, %rd1, %rd9;
	ld.global.u32 	%r20, [%rd10];
	and.b32  	%r21, %r20, %r7;
	mad.lo.s32 	%r22, %r21, %r2, %r1;
	mul.wide.s32 	%rd11, %r22, 4;
	add.s64 	%rd12, %rd4, %rd11;
	ld.shared.u32 	%r23, [%rd12];
	add.s32 	%r24, %r23, 1;
	st.shared.u32 	[%rd12], %r24;
	mul.wide.s32 	%rd13, %r23, 4;
	add.s64 	%rd14, %rd2, %rd13;
	st.global.u32 	[%rd14], %r20;
	add.s32 	%r26, %r26, %r4;
	setp.lt.s32	%p4, %r26, %r10;
	@%p4 bra 	BB1_3;

BB1_4:
	ret;
}

	// .globl	thread_scatter_kv
.entry thread_scatter_kv(
	.param .u64 .ptr .global .align 4 thread_scatter_kv_param_0,
	.param .u64 .ptr .global .align 4 thread_scatter_kv_param_1,
	.param .u64 .ptr .global .align 4 thread_scatter_kv_param_2,
	.param .u64 .ptr .global .align 4 thread_scatter_kv_param_3,
	.param .u32 thread_scatter_kv_param_4,
	.param .u64 .ptr .global .align 4 thread_scatter_kv_param_5,
	.param .u32 thread_scatter_kv_param_6,
	.param .u64 .ptr .shared .align 4 thread_scatter_kv_param_7
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<28>;
	.reg .b64 	%rd<19>;


	ld.param.u64 	%rd1, [thread_scatter_kv_param_0];
	ld.param.u64 	%rd2, [thread_scatter_kv_param_1];
	ld.param.u64 	%rd3, [thread_scatter_kv_param_2];
	ld.param.u64 	%rd4, [thread_scatter_kv_param_3];
	ld.param.u32 	%r10, [thread_scatter_kv_param_4];
	ld.param.u64 	%rd5, [thread_scatter_kv_param_5];
	ld.param.u32 	%r11, [thread_scatter_kv_param_6];
	ld.param.u64 	%rd6, [thread_scatter_kv_param_7];
	mov.u32 	%r1, %tid.x;
	mov.u32 	%r13, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mov.b32	%r14, %envreg3;
	add.s32 	%r15, %r14, %r1;
	mad.lo.s32 	%r27, %r13, %r2, %r15;
	mov.b32	%r16, %envreg6;
	mul.lo.s32 	%r4, %r2, %r16;
	mov.u32 	%r26, 0;
	setp.lt.s32	%p1, %r11, 1;
	@%p1 bra 	BB2_2;

BB2_1:
	mad.lo.s32 	%r17, %r26, %r4, %r27;
	mul.wide.s32 	%rd7, %r17, 4;
	add.s64 	%rd8, %rd5, %rd7;
	ld.global.u32 	%r18, [%rd8];
	mad.lo.s32 	%r19, %r26, %r2, %r1;
	mul.wide.s32 	%rd9, %r19, 4;
	add.s64 	%rd10, %rd6, %rd9;
	st.shared.u32 	[%rd10], %r18;
	add.s32 	%r26, %r26, 1;
	setp.lt.s32	%p2, %r26, %r11;
	@%p2 bra 	BB2_1;

BB2_2:
	add.s32 	%r7, %r11, -1;
	bar.sync 	0;
	setp.ge.s32	%p3, %r27, %r10;
	@%p3 bra 	BB2_4;

BB2_3:
	mul.wide.s32 	%rd11, %r27, 4;
	add.s64 	%rd12, %rd1, %rd11;
	ld.global.u32 	%r20, [%rd12];
	and.b32  	%r21, %r20, %r7;
	mad.lo.s32 	%r22, %r21, %r2, %r1;
	mul.wide.s32 	%rd13, %r22, 4;
	add.s64 	%rd14, %rd6, %rd13;
	ld.shared.u32 	%r23, [%rd14];
	mul.wide.s32 	%rd15, %r23, 4;
	add.s64 	%rd16, %rd3, %rd15;
	st.global.u32 	[%rd16], %r20;
	add.s64 	%rd17, %rd2, %rd11;
	ld.global.u32 	%r24, [%rd17];
	add.s32 	%r25, %r23, 1;
	st.shared.u32 	[%rd14], %r25;
	add.s64 	%rd18, %rd4, %rd15;
	st.global.u32 	[%rd18], %r24;
	add.s32 	%r27, %r27, %r4;
	setp.lt.s32	%p4, %r27, %r10;
	@%p4 bra 	BB2_3;

BB2_4:
	ret;
}

	// .globl	block_histogram
.entry block_histogram(
	.param .u64 .ptr .global .align 4 block_histogram_param_0,
	.param .u32 block_histogram_param_1,
	.param .u64 .ptr .global .align 4 block_histogram_param_2,
	.param .u64 .ptr .shared .align 4 block_histogram_param_3,
	.param .u32 block_histogram_param_4
)
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<30>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd1, [block_histogram_param_0];
	ld.param.u32 	%r16, [block_histogram_param_1];
	ld.param.u64 	%rd2, [block_histogram_param_2];
	ld.param.u64 	%rd3, [block_histogram_param_3];
	ld.param.u32 	%r17, [block_histogram_param_4];
	mov.u32 	%r28, %tid.x;
	mov.u32 	%r2, %ctaid.x;
	mov.u32 	%r3, %ntid.x;
	mov.b32	%r18, %envreg3;
	add.s32 	%r19, %r18, %r28;
	mad.lo.s32 	%r26, %r2, %r3, %r19;
	mov.b32	%r5, %envreg6;
	mov.b32	%r6, %envreg0;
	setp.ge.s32	%p2, %r28, %r17;
	@%p2 bra 	BB3_3;

	mov.u32 	%r29, %r28;

BB3_2:
	mul.wide.s32 	%rd4, %r29, 4;
	add.s64 	%rd5, %rd3, %rd4;
	mov.u32 	%r20, 0;
	st.shared.u32 	[%rd5], %r20;
	add.s32 	%r29, %r29, %r3;
	setp.lt.s32	%p3, %r29, %r17;
	@%p3 bra 	BB3_2;

BB3_3:
	mul.lo.s32 	%r9, %r3, %r5;
	add.s32 	%r10, %r2, %r6;
	add.s32 	%r11, %r17, -1;
	bar.sync 	0;
	setp.ge.s32	%p4, %r26, %r16;
	@%p4 bra 	BB3_5;

BB3_4:
	mul.wide.s32 	%rd6, %r26, 4;
	add.s64 	%rd7, %rd1, %rd6;
	ld.global.u32 	%r21, [%rd7];
	and.b32  	%r22, %r21, %r11;
	mul.wide.s32 	%rd8, %r22, 4;
	add.s64 	%rd9, %rd3, %rd8;
	atom.shared.add.u32 	%r23, [%rd9], 1;
	add.s32 	%r26, %r26, %r9;
	setp.lt.s32	%p5, %r26, %r16;
	@%p5 bra 	BB3_4;

BB3_5:
	setp.lt.s32	%p1, %r28, %r17;
	bar.sync 	0;
	@!%p1 bra 	BB3_7;
	bra.uni 	BB3_6;

BB3_6:
	mul.wide.s32 	%rd10, %r28, 4;
	add.s64 	%rd11, %rd3, %rd10;
	ld.shared.u32 	%r24, [%rd11];
	mad.lo.s32 	%r25, %r28, %r5, %r10;
	mul.wide.s32 	%rd12, %r25, 4;
	add.s64 	%rd13, %rd2, %rd12;
	st.global.u32 	[%rd13], %r24;
	add.s32 	%r28, %r28, %r3;
	setp.lt.s32	%p6, %r28, %r17;
	@%p6 bra 	BB3_6;

BB3_7:
	ret;
}

	// .globl	block_scatter_k
.entry block_scatter_k(
	.param .u64 .ptr .global .align 4 block_scatter_k_param_0,
	.param .u64 .ptr .global .align 4 block_scatter_k_param_1,
	.param .u32 block_scatter_k_param_2,
	.param .u64 .ptr .global .align 4 block_scatter_k_param_3,
	.param .u64 .ptr .shared .align 4 block_scatter_k_param_4,
	.param .u32 block_scatter_k_param_5
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<26>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd1, [block_scatter_k_param_0];
	ld.param.u64 	%rd2, [block_scatter_k_param_1];
	ld.param.u32 	%r12, [block_scatter_k_param_2];
	ld.param.u64 	%rd3, [block_scatter_k_param_3];
	ld.param.u64 	%rd4, [block_scatter_k_param_4];
	ld.param.u32 	%r13, [block_scatter_k_param_5];
	mov.u32 	%r24, %tid.x;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mov.b32	%r15, %envreg3;
	add.s32 	%r16, %r15, %r24;
	mad.lo.s32 	%r25, %r14, %r2, %r16;
	mov.b32	%r4, %envreg6;
	mov.b32	%r17, %envreg0;
	add.s32 	%r5, %r14, %r17;
	setp.ge.s32	%p1, %r24, %r13;
	@%p1 bra 	BB4_2;

BB4_1:
	mad.lo.s32 	%r18, %r24, %r4, %r5;
	mul.wide.s32 	%rd5, %r18, 4;
	add.s64 	%rd6, %rd3, %rd5;
	ld.global.u32 	%r19, [%rd6];
	mul.wide.s32 	%rd7, %r24, 4;
	add.s64 	%rd8, %rd4, %rd7;
	st.shared.u32 	[%rd8], %r19;
	add.s32 	%r24, %r24, %r2;
	setp.lt.s32	%p2, %r24, %r13;
	@%p2 bra 	BB4_1;

BB4_2:
	mul.lo.s32 	%r8, %r2, %r4;
	add.s32 	%r9, %r13, -1;
	bar.sync 	0;
	setp.ge.s32	%p3, %r25, %r12;
	@%p3 bra 	BB4_4;

BB4_3:
	mul.wide.s32 	%rd9, %r25, 4;
	add.s64 	%rd10, %rd1, %rd9;
	ld.global.u32 	%r20, [%rd10];
	and.b32  	%r21, %r20, %r9;
	mul.wide.s32 	%rd11, %r21, 4;
	add.s64 	%rd12, %rd4, %rd11;
	atom.shared.add.u32 	%r22, [%rd12], 1;
	ld.global.u32 	%r23, [%rd10];
	mul.wide.s32 	%rd13, %r22, 4;
	add.s64 	%rd14, %rd2, %rd13;
	st.global.u32 	[%rd14], %r23;
	add.s32 	%r25, %r25, %r8;
	setp.lt.s32	%p4, %r25, %r12;
	@%p4 bra 	BB4_3;

BB4_4:
	ret;
}

	// .globl	block_scatter_kv
.entry block_scatter_kv(
	.param .u64 .ptr .global .align 4 block_scatter_kv_param_0,
	.param .u64 .ptr .global .align 4 block_scatter_kv_param_1,
	.param .u64 .ptr .global .align 4 block_scatter_kv_param_2,
	.param .u64 .ptr .global .align 4 block_scatter_kv_param_3,
	.param .u32 block_scatter_kv_param_4,
	.param .u64 .ptr .global .align 4 block_scatter_kv_param_5,
	.param .u64 .ptr .shared .align 4 block_scatter_kv_param_6,
	.param .u32 block_scatter_kv_param_7
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<27>;
	.reg .b64 	%rd<19>;


	ld.param.u64 	%rd1, [block_scatter_kv_param_0];
	ld.param.u64 	%rd2, [block_scatter_kv_param_1];
	ld.param.u64 	%rd3, [block_scatter_kv_param_2];
	ld.param.u64 	%rd4, [block_scatter_kv_param_3];
	ld.param.u32 	%r12, [block_scatter_kv_param_4];
	ld.param.u64 	%rd5, [block_scatter_kv_param_5];
	ld.param.u64 	%rd6, [block_scatter_kv_param_6];
	ld.param.u32 	%r13, [block_scatter_kv_param_7];
	mov.u32 	%r25, %tid.x;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mov.b32	%r15, %envreg3;
	add.s32 	%r16, %r15, %r25;
	mad.lo.s32 	%r26, %r14, %r2, %r16;
	mov.b32	%r4, %envreg6;
	mov.b32	%r17, %envreg0;
	add.s32 	%r5, %r14, %r17;
	setp.ge.s32	%p1, %r25, %r13;
	@%p1 bra 	BB5_2;

BB5_1:
	mad.lo.s32 	%r18, %r25, %r4, %r5;
	mul.wide.s32 	%rd7, %r18, 4;
	add.s64 	%rd8, %rd5, %rd7;
	ld.global.u32 	%r19, [%rd8];
	mul.wide.s32 	%rd9, %r25, 4;
	add.s64 	%rd10, %rd6, %rd9;
	st.shared.u32 	[%rd10], %r19;
	add.s32 	%r25, %r25, %r2;
	setp.lt.s32	%p2, %r25, %r13;
	@%p2 bra 	BB5_1;

BB5_2:
	mul.lo.s32 	%r8, %r2, %r4;
	add.s32 	%r9, %r13, -1;
	bar.sync 	0;
	setp.ge.s32	%p3, %r26, %r12;
	@%p3 bra 	BB5_4;

BB5_3:
	mul.wide.s32 	%rd11, %r26, 4;
	add.s64 	%rd12, %rd1, %rd11;
	ld.global.u32 	%r20, [%rd12];
	and.b32  	%r21, %r20, %r9;
	mul.wide.s32 	%rd13, %r21, 4;
	add.s64 	%rd14, %rd6, %rd13;
	atom.shared.add.u32 	%r22, [%rd14], 1;
	ld.global.u32 	%r23, [%rd12];
	mul.wide.s32 	%rd15, %r22, 4;
	add.s64 	%rd16, %rd3, %rd15;
	st.global.u32 	[%rd16], %r23;
	add.s64 	%rd17, %rd2, %rd11;
	ld.global.u32 	%r24, [%rd17];
	add.s64 	%rd18, %rd4, %rd15;
	st.global.u32 	[%rd18], %r24;
	add.s32 	%r26, %r26, %r8;
	setp.lt.s32	%p4, %r26, %r12;
	@%p4 bra 	BB5_3;

BB5_4:
	ret;
}

	// .globl	block_reorder_scatter_k
.entry block_reorder_scatter_k(
	.param .u64 .ptr .global .align 4 block_reorder_scatter_k_param_0,
	.param .u64 .ptr .global .align 4 block_reorder_scatter_k_param_1,
	.param .u32 block_reorder_scatter_k_param_2,
	.param .u64 .ptr .global .align 4 block_reorder_scatter_k_param_3,
	.param .u64 .ptr .shared .align 4 block_reorder_scatter_k_param_4,
	.param .u32 block_reorder_scatter_k_param_5,
	.param .u64 .ptr .global .align 4 block_reorder_scatter_k_param_6,
	.param .u64 .ptr .shared .align 4 block_reorder_scatter_k_param_7,
	.param .u64 .ptr .global .align 4 block_reorder_scatter_k_param_8,
	.param .u64 .ptr .global .align 4 block_reorder_scatter_k_param_9
)
{
	.reg .pred 	%p<21>;
	.reg .b32 	%r<100>;
	.reg .b64 	%rd<45>;
	// demoted variable
	.shared .align 4 .b8 block_reorder_scatter_k$tempSums[128];

	ld.param.u64 	%rd6, [block_reorder_scatter_k_param_0];
	ld.param.u64 	%rd7, [block_reorder_scatter_k_param_1];
	ld.param.u32 	%r34, [block_reorder_scatter_k_param_2];
	ld.param.u64 	%rd8, [block_reorder_scatter_k_param_3];
	ld.param.u64 	%rd9, [block_reorder_scatter_k_param_4];
	ld.param.u32 	%r35, [block_reorder_scatter_k_param_5];
	ld.param.u64 	%rd10, [block_reorder_scatter_k_param_6];
	ld.param.u64 	%rd11, [block_reorder_scatter_k_param_7];
	mov.u32 	%r1, %tid.x;
	cvt.s64.s32	%rd1, %r1;
	mov.u32 	%r36, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mov.b32	%r37, %envreg3;
	add.s32 	%r38, %r37, %r1;
	mad.lo.s32 	%r94, %r36, %r2, %r38;
	mov.b32	%r4, %envreg6;
	mov.b32	%r39, %envreg0;
	add.s32 	%r5, %r36, %r39;
	add.s32 	%r6, %r35, -1;
	mov.u32 	%r40, 0;
	st.shared.u32 	[%rd9], %r40;
	setp.ge.s32	%p2, %r1, %r35;
	@%p2 bra 	BB6_3;

	mov.u32 	%r99, %r1;

BB6_2:
	mad.lo.s32 	%r41, %r99, %r4, %r5;
	mul.wide.s32 	%rd12, %r41, 4;
	add.s64 	%rd13, %rd10, %rd12;
	ld.global.u32 	%r42, [%rd13];
	mul.wide.s32 	%rd14, %r99, 4;
	add.s64 	%rd15, %rd9, %rd14;
	st.shared.u32 	[%rd15+4], %r42;
	add.s32 	%r99, %r99, %r2;
	setp.lt.s32	%p3, %r99, %r35;
	@%p3 bra 	BB6_2;

BB6_3:
	bar.sync 	0;
	shr.s32 	%r9, %r1, 5;
	shl.b32 	%r43, %r1, 1;
	mul.wide.s32 	%rd16, %r43, 4;
	add.s64 	%rd2, %rd9, %rd16;
	ld.shared.u32 	%r10, [%rd2+4];
	ld.shared.u32 	%r11, [%rd2+8];
	bar.sync 	0;
	add.s32 	%r12, %r10, %r11;
	add.s64 	%rd17, %rd1, 1;
	cvt.s64.s32 	%rd18, %rd17;
	shl.b64 	%rd19, %rd18, 2;
	add.s64 	%rd3, %rd9, %rd19;
	st.shared.u32 	[%rd3], %r12;
	bar.sync 	0;
	and.b32  	%r13, %r1, 31;
	setp.eq.s32	%p4, %r13, 0;
	@%p4 bra 	BB6_5;

	ld.shared.u32 	%r44, [%rd3];
	ld.shared.u32 	%r45, [%rd3+-4];
	add.s32 	%r46, %r44, %r45;
	st.shared.u32 	[%rd3], %r46;

BB6_5:
	setp.lt.u32	%p5, %r13, 2;
	@%p5 bra 	BB6_7;

	ld.shared.u32 	%r47, [%rd3];
	ld.shared.u32 	%r48, [%rd3+-8];
	add.s32 	%r49, %r47, %r48;
	st.shared.u32 	[%rd3], %r49;

BB6_7:
	setp.lt.u32	%p6, %r13, 4;
	@%p6 bra 	BB6_9;

	ld.shared.u32 	%r50, [%rd3];
	ld.shared.u32 	%r51, [%rd3+-16];
	add.s32 	%r52, %r50, %r51;
	st.shared.u32 	[%rd3], %r52;

BB6_9:
	setp.lt.u32	%p7, %r13, 8;
	@%p7 bra 	BB6_11;

	ld.shared.u32 	%r53, [%rd3];
	ld.shared.u32 	%r54, [%rd3+-32];
	add.s32 	%r55, %r53, %r54;
	st.shared.u32 	[%rd3], %r55;

BB6_11:
	setp.lt.u32	%p8, %r13, 16;
	@%p8 bra 	BB6_13;

	ld.shared.u32 	%r56, [%rd3];
	ld.shared.u32 	%r57, [%rd3+-64];
	add.s32 	%r58, %r56, %r57;
	st.shared.u32 	[%rd3], %r58;

BB6_13:
	mul.wide.s32 	%rd20, %r9, 4;
	mov.u64 	%rd21, block_reorder_scatter_k$tempSums;
	add.s64 	%rd4, %rd21, %rd20;
	setp.ne.s32	%p9, %r13, 0;
	@%p9 bra 	BB6_15;

	add.s32 	%r59, %r9, 1;
	shl.b32 	%r60, %r59, 5;
	mul.wide.s32 	%rd22, %r60, 4;
	add.s64 	%rd23, %rd9, %rd22;
	ld.shared.u32 	%r61, [%rd23];
	st.shared.u32 	[%rd4], %r61;

BB6_15:
	ld.shared.u32 	%r62, [%rd3];
	sub.s32 	%r63, %r62, %r12;
	st.shared.u32 	[%rd3], %r63;
	bar.sync 	0;
	setp.ne.s32	%p10, %r9, 0;
	@%p10 bra 	BB6_27;

	shl.b64 	%rd24, %rd1, 2;
	add.s64 	%rd5, %rd21, %rd24;
	ld.shared.u32 	%r14, [%rd5];
	mov.u32 	%r93, %r14;
	@%p4 bra 	BB6_18;

	ld.shared.u32 	%r64, [%rd5+-4];
	add.s32 	%r15, %r14, %r64;
	st.shared.u32 	[%rd5], %r15;
	mov.u32 	%r93, %r15;

BB6_18:
	mov.u32 	%r85, %r93;
	mov.u32 	%r92, %r85;
	@%p5 bra 	BB6_20;

	ld.shared.u32 	%r65, [%rd5+-8];
	add.s32 	%r92, %r92, %r65;
	st.shared.u32 	[%rd5], %r92;

BB6_20:
	mov.u32 	%r91, %r92;
	@%p6 bra 	BB6_22;

	ld.shared.u32 	%r66, [%rd5+-16];
	add.s32 	%r91, %r91, %r66;
	st.shared.u32 	[%rd5], %r91;

BB6_22:
	mov.u32 	%r90, %r91;
	@%p7 bra 	BB6_24;

	ld.shared.u32 	%r67, [%rd5+-32];
	add.s32 	%r90, %r90, %r67;
	st.shared.u32 	[%rd5], %r90;

BB6_24:
	mov.u32 	%r89, %r90;
	@%p8 bra 	BB6_26;

	ld.shared.u32 	%r68, [%rd5+-64];
	add.s32 	%r89, %r89, %r68;
	st.shared.u32 	[%rd5], %r89;

BB6_26:
	sub.s32 	%r69, %r89, %r14;
	st.shared.u32 	[%rd5], %r69;

BB6_27:
	mul.lo.s32 	%r25, %r2, %r4;
	bar.sync 	0;
	ld.shared.u32 	%r70, [%rd4];
	ld.shared.u32 	%r71, [%rd3];
	add.s32 	%r26, %r70, %r71;
	bar.sync 	0;
	st.shared.u32 	[%rd2+4], %r26;
	add.s32 	%r72, %r26, %r10;
	st.shared.u32 	[%rd2+8], %r72;
	bar.sync 	0;
	setp.ge.s32	%p16, %r94, %r34;
	@%p16 bra 	BB6_29;

BB6_28:
	mul.wide.s32 	%rd26, %r94, 4;
	add.s64 	%rd27, %rd6, %rd26;
	ld.global.u32 	%r73, [%rd27];
	and.b32  	%r74, %r73, %r6;
	mul.wide.s32 	%rd28, %r74, 4;
	add.s64 	%rd29, %rd28, %rd9;
	add.s64 	%rd30, %rd29, 4;
	atom.shared.add.u32 	%r75, [%rd30], 1;
	ld.global.u32 	%r76, [%rd27];
	mul.wide.s32 	%rd31, %r75, 4;
	add.s64 	%rd32, %rd11, %rd31;
	st.shared.u32 	[%rd32], %r76;
	add.s32 	%r94, %r94, %r25;
	setp.lt.s32	%p17, %r94, %r34;
	@%p17 bra 	BB6_28;

BB6_29:
	setp.lt.s32	%p1, %r1, %r35;
	bar.sync 	0;
	mov.u32 	%r98, %r1;
	@!%p1 bra 	BB6_31;
	bra.uni 	BB6_30;

BB6_30:
	mov.u32 	%r29, %r98;
	mad.lo.s32 	%r77, %r29, %r4, %r5;
	mul.wide.s32 	%rd33, %r77, 4;
	add.s64 	%rd34, %rd8, %rd33;
	mul.wide.s32 	%rd35, %r29, 4;
	add.s64 	%rd36, %rd9, %rd35;
	ld.shared.u32 	%r78, [%rd36];
	ld.global.u32 	%r79, [%rd34];
	sub.s32 	%r80, %r79, %r78;
	st.shared.u32 	[%rd36], %r80;
	add.s32 	%r30, %r29, %r2;
	setp.lt.s32	%p18, %r30, %r35;
	mov.u32 	%r98, %r30;
	@%p18 bra 	BB6_30;

BB6_31:
	bar.sync 	0;
	mul.wide.s32 	%rd37, %r35, 4;
	add.s64 	%rd38, %rd9, %rd37;
	ld.shared.u32 	%r31, [%rd38];
	setp.ge.s32	%p19, %r1, %r31;
	@%p19 bra 	BB6_34;

	mov.u32 	%r97, %r1;

BB6_33:
	mul.wide.s32 	%rd39, %r97, 4;
	add.s64 	%rd40, %rd11, %rd39;
	ld.shared.u32 	%r81, [%rd40];
	and.b32  	%r82, %r81, %r6;
	mul.wide.s32 	%rd41, %r82, 4;
	add.s64 	%rd42, %rd9, %rd41;
	ld.shared.u32 	%r83, [%rd42];
	add.s32 	%r84, %r83, %r97;
	mul.wide.s32 	%rd43, %r84, 4;
	add.s64 	%rd44, %rd7, %rd43;
	st.global.u32 	[%rd44], %r81;
	add.s32 	%r97, %r97, %r2;
	setp.lt.s32	%p20, %r97, %r31;
	@%p20 bra 	BB6_33;

BB6_34:
	ret;
}

	// .globl	block_reorder_scatter_kv
.entry block_reorder_scatter_kv(
	.param .u64 .ptr .global .align 4 block_reorder_scatter_kv_param_0,
	.param .u64 .ptr .global .align 4 block_reorder_scatter_kv_param_1,
	.param .u64 .ptr .global .align 4 block_reorder_scatter_kv_param_2,
	.param .u64 .ptr .global .align 4 block_reorder_scatter_kv_param_3,
	.param .u32 block_reorder_scatter_kv_param_4,
	.param .u64 .ptr .global .align 4 block_reorder_scatter_kv_param_5,
	.param .u64 .ptr .shared .align 4 block_reorder_scatter_kv_param_6,
	.param .u32 block_reorder_scatter_kv_param_7,
	.param .u64 .ptr .global .align 4 block_reorder_scatter_kv_param_8,
	.param .u64 .ptr .shared .align 4 block_reorder_scatter_kv_param_9,
	.param .u64 .ptr .shared .align 4 block_reorder_scatter_kv_param_10
)
{
	.reg .pred 	%p<21>;
	.reg .b32 	%r<102>;
	.reg .b64 	%rd<52>;
	// demoted variable
	.shared .align 4 .b8 block_reorder_scatter_kv$tempSums[128];

	ld.param.u64 	%rd6, [block_reorder_scatter_kv_param_0];
	ld.param.u64 	%rd7, [block_reorder_scatter_kv_param_1];
	ld.param.u64 	%rd8, [block_reorder_scatter_kv_param_2];
	ld.param.u64 	%rd9, [block_reorder_scatter_kv_param_3];
	ld.param.u32 	%r34, [block_reorder_scatter_kv_param_4];
	ld.param.u64 	%rd10, [block_reorder_scatter_kv_param_5];
	ld.param.u64 	%rd11, [block_reorder_scatter_kv_param_6];
	ld.param.u32 	%r35, [block_reorder_scatter_kv_param_7];
	ld.param.u64 	%rd12, [block_reorder_scatter_kv_param_8];
	ld.param.u64 	%rd13, [block_reorder_scatter_kv_param_9];
	ld.param.u64 	%rd14, [block_reorder_scatter_kv_param_10];
	mov.u32 	%r1, %tid.x;
	cvt.s64.s32	%rd1, %r1;
	mov.u32 	%r36, %ctaid.x;
	mov.u32 	%r2, %ntid.x;
	mov.b32	%r37, %envreg3;
	add.s32 	%r38, %r37, %r1;
	mad.lo.s32 	%r96, %r36, %r2, %r38;
	mov.b32	%r4, %envreg6;
	mov.b32	%r39, %envreg0;
	add.s32 	%r5, %r36, %r39;
	add.s32 	%r6, %r35, -1;
	mov.u32 	%r40, 0;
	st.shared.u32 	[%rd11], %r40;
	setp.ge.s32	%p2, %r1, %r35;
	@%p2 bra 	BB7_3;

	mov.u32 	%r101, %r1;

BB7_2:
	mad.lo.s32 	%r41, %r101, %r4, %r5;
	mul.wide.s32 	%rd15, %r41, 4;
	add.s64 	%rd16, %rd12, %rd15;
	ld.global.u32 	%r42, [%rd16];
	mul.wide.s32 	%rd17, %r101, 4;
	add.s64 	%rd18, %rd11, %rd17;
	st.shared.u32 	[%rd18+4], %r42;
	add.s32 	%r101, %r101, %r2;
	setp.lt.s32	%p3, %r101, %r35;
	@%p3 bra 	BB7_2;

BB7_3:
	bar.sync 	0;
	shr.s32 	%r9, %r1, 5;
	shl.b32 	%r43, %r1, 1;
	mul.wide.s32 	%rd19, %r43, 4;
	add.s64 	%rd2, %rd11, %rd19;
	ld.shared.u32 	%r10, [%rd2+4];
	ld.shared.u32 	%r11, [%rd2+8];
	bar.sync 	0;
	add.s32 	%r12, %r10, %r11;
	add.s64 	%rd20, %rd1, 1;
	cvt.s64.s32 	%rd21, %rd20;
	shl.b64 	%rd22, %rd21, 2;
	add.s64 	%rd3, %rd11, %rd22;
	st.shared.u32 	[%rd3], %r12;
	bar.sync 	0;
	and.b32  	%r13, %r1, 31;
	setp.eq.s32	%p4, %r13, 0;
	@%p4 bra 	BB7_5;

	ld.shared.u32 	%r44, [%rd3];
	ld.shared.u32 	%r45, [%rd3+-4];
	add.s32 	%r46, %r44, %r45;
	st.shared.u32 	[%rd3], %r46;

BB7_5:
	setp.lt.u32	%p5, %r13, 2;
	@%p5 bra 	BB7_7;

	ld.shared.u32 	%r47, [%rd3];
	ld.shared.u32 	%r48, [%rd3+-8];
	add.s32 	%r49, %r47, %r48;
	st.shared.u32 	[%rd3], %r49;

BB7_7:
	setp.lt.u32	%p6, %r13, 4;
	@%p6 bra 	BB7_9;

	ld.shared.u32 	%r50, [%rd3];
	ld.shared.u32 	%r51, [%rd3+-16];
	add.s32 	%r52, %r50, %r51;
	st.shared.u32 	[%rd3], %r52;

BB7_9:
	setp.lt.u32	%p7, %r13, 8;
	@%p7 bra 	BB7_11;

	ld.shared.u32 	%r53, [%rd3];
	ld.shared.u32 	%r54, [%rd3+-32];
	add.s32 	%r55, %r53, %r54;
	st.shared.u32 	[%rd3], %r55;

BB7_11:
	setp.lt.u32	%p8, %r13, 16;
	@%p8 bra 	BB7_13;

	ld.shared.u32 	%r56, [%rd3];
	ld.shared.u32 	%r57, [%rd3+-64];
	add.s32 	%r58, %r56, %r57;
	st.shared.u32 	[%rd3], %r58;

BB7_13:
	mul.wide.s32 	%rd23, %r9, 4;
	mov.u64 	%rd24, block_reorder_scatter_kv$tempSums;
	add.s64 	%rd4, %rd24, %rd23;
	setp.ne.s32	%p9, %r13, 0;
	@%p9 bra 	BB7_15;

	add.s32 	%r59, %r9, 1;
	shl.b32 	%r60, %r59, 5;
	mul.wide.s32 	%rd25, %r60, 4;
	add.s64 	%rd26, %rd11, %rd25;
	ld.shared.u32 	%r61, [%rd26];
	st.shared.u32 	[%rd4], %r61;

BB7_15:
	ld.shared.u32 	%r62, [%rd3];
	sub.s32 	%r63, %r62, %r12;
	st.shared.u32 	[%rd3], %r63;
	bar.sync 	0;
	setp.ne.s32	%p10, %r9, 0;
	@%p10 bra 	BB7_27;

	shl.b64 	%rd27, %rd1, 2;
	add.s64 	%rd5, %rd24, %rd27;
	ld.shared.u32 	%r14, [%rd5];
	mov.u32 	%r95, %r14;
	@%p4 bra 	BB7_18;

	ld.shared.u32 	%r64, [%rd5+-4];
	add.s32 	%r15, %r14, %r64;
	st.shared.u32 	[%rd5], %r15;
	mov.u32 	%r95, %r15;

BB7_18:
	mov.u32 	%r87, %r95;
	mov.u32 	%r94, %r87;
	@%p5 bra 	BB7_20;

	ld.shared.u32 	%r65, [%rd5+-8];
	add.s32 	%r94, %r94, %r65;
	st.shared.u32 	[%rd5], %r94;

BB7_20:
	mov.u32 	%r93, %r94;
	@%p6 bra 	BB7_22;

	ld.shared.u32 	%r66, [%rd5+-16];
	add.s32 	%r93, %r93, %r66;
	st.shared.u32 	[%rd5], %r93;

BB7_22:
	mov.u32 	%r92, %r93;
	@%p7 bra 	BB7_24;

	ld.shared.u32 	%r67, [%rd5+-32];
	add.s32 	%r92, %r92, %r67;
	st.shared.u32 	[%rd5], %r92;

BB7_24:
	mov.u32 	%r91, %r92;
	@%p8 bra 	BB7_26;

	ld.shared.u32 	%r68, [%rd5+-64];
	add.s32 	%r91, %r91, %r68;
	st.shared.u32 	[%rd5], %r91;

BB7_26:
	sub.s32 	%r69, %r91, %r14;
	st.shared.u32 	[%rd5], %r69;

BB7_27:
	mul.lo.s32 	%r25, %r2, %r4;
	bar.sync 	0;
	ld.shared.u32 	%r70, [%rd4];
	ld.shared.u32 	%r71, [%rd3];
	add.s32 	%r26, %r70, %r71;
	bar.sync 	0;
	st.shared.u32 	[%rd2+4], %r26;
	add.s32 	%r72, %r26, %r10;
	st.shared.u32 	[%rd2+8], %r72;
	bar.sync 	0;
	setp.ge.s32	%p16, %r96, %r34;
	@%p16 bra 	BB7_29;

BB7_28:
	mul.wide.s32 	%rd29, %r96, 4;
	add.s64 	%rd30, %rd6, %rd29;
	ld.global.u32 	%r73, [%rd30];
	and.b32  	%r74, %r73, %r6;
	mul.wide.s32 	%rd31, %r74, 4;
	add.s64 	%rd32, %rd31, %rd11;
	add.s64 	%rd33, %rd32, 4;
	atom.shared.add.u32 	%r75, [%rd33], 1;
	ld.global.u32 	%r76, [%rd30];
	mul.wide.s32 	%rd34, %r75, 4;
	add.s64 	%rd35, %rd13, %rd34;
	st.shared.u32 	[%rd35], %r76;
	add.s64 	%rd36, %rd7, %rd29;
	ld.global.u32 	%r77, [%rd36];
	add.s64 	%rd37, %rd14, %rd34;
	st.shared.u32 	[%rd37], %r77;
	add.s32 	%r96, %r96, %r25;
	setp.lt.s32	%p17, %r96, %r34;
	@%p17 bra 	BB7_28;

BB7_29:
	setp.lt.s32	%p1, %r1, %r35;
	bar.sync 	0;
	mov.u32 	%r100, %r1;
	@!%p1 bra 	BB7_31;
	bra.uni 	BB7_30;

BB7_30:
	mov.u32 	%r29, %r100;
	mad.lo.s32 	%r78, %r29, %r4, %r5;
	mul.wide.s32 	%rd38, %r78, 4;
	add.s64 	%rd39, %rd10, %rd38;
	mul.wide.s32 	%rd40, %r29, 4;
	add.s64 	%rd41, %rd11, %rd40;
	ld.shared.u32 	%r79, [%rd41];
	ld.global.u32 	%r80, [%rd39];
	sub.s32 	%r81, %r80, %r79;
	st.shared.u32 	[%rd41], %r81;
	add.s32 	%r30, %r29, %r2;
	setp.lt.s32	%p18, %r30, %r35;
	mov.u32 	%r100, %r30;
	@%p18 bra 	BB7_30;

BB7_31:
	bar.sync 	0;
	mul.wide.s32 	%rd42, %r35, 4;
	add.s64 	%rd43, %rd11, %rd42;
	ld.shared.u32 	%r31, [%rd43];
	setp.ge.s32	%p19, %r1, %r31;
	@%p19 bra 	BB7_34;

	mov.u32 	%r99, %r1;

BB7_33:
	mul.wide.s32 	%rd44, %r99, 4;
	add.s64 	%rd45, %rd13, %rd44;
	ld.shared.u32 	%r82, [%rd45];
	and.b32  	%r83, %r82, %r6;
	mul.wide.s32 	%rd46, %r83, 4;
	add.s64 	%rd47, %rd11, %rd46;
	ld.shared.u32 	%r84, [%rd47];
	add.s32 	%r85, %r84, %r99;
	mul.wide.s32 	%rd48, %r85, 4;
	add.s64 	%rd49, %rd8, %rd48;
	st.global.u32 	[%rd49], %r82;
	add.s64 	%rd50, %rd14, %rd44;
	ld.shared.u32 	%r86, [%rd50];
	add.s64 	%rd51, %rd9, %rd48;
	st.global.u32 	[%rd51], %r86;
	add.s32 	%r99, %r99, %r2;
	setp.lt.s32	%p20, %r99, %r31;
	@%p20 bra 	BB7_33;

BB7_34:
	ret;
}

	// .globl	gatherStartPos
.entry gatherStartPos(
	.param .u64 .ptr .global .align 4 gatherStartPos_param_0,
	.param .u32 gatherStartPos_param_1,
	.param .u64 .ptr .global .align 4 gatherStartPos_param_2,
	.param .u32 gatherStartPos_param_3
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<7>;


	ld.param.u64 	%rd1, [gatherStartPos_param_0];
	ld.param.u32 	%r8, [gatherStartPos_param_1];
	ld.param.u64 	%rd2, [gatherStartPos_param_2];
	ld.param.u32 	%r9, [gatherStartPos_param_3];
	mov.b32	%r10, %envreg3;
	mov.u32 	%r11, %ctaid.x;
	mov.u32 	%r12, %ntid.x;
	mad.lo.s32 	%r13, %r11, %r12, %r10;
	mov.u32 	%r14, %tid.x;
	add.s32 	%r18, %r13, %r14;
	mov.b32	%r15, %envreg6;
	mul.lo.s32 	%r2, %r12, %r15;
	mul.lo.s32 	%r17, %r18, %r9;
	setp.ge.s32	%p1, %r17, %r8;
	@%p1 bra 	BB8_2;

BB8_1:
	mul.wide.s32 	%rd3, %r17, 4;
	add.s64 	%rd4, %rd1, %rd3;
	ld.global.u32 	%r16, [%rd4];
	mul.wide.s32 	%rd5, %r18, 4;
	add.s64 	%rd6, %rd2, %rd5;
	st.global.u32 	[%rd6], %r16;
	add.s32 	%r18, %r18, %r2;
	mul.lo.s32 	%r17, %r18, %r9;
	setp.lt.s32	%p2, %r17, %r8;
	@%p2 bra 	BB8_1;

BB8_2:
	ret;
}


  